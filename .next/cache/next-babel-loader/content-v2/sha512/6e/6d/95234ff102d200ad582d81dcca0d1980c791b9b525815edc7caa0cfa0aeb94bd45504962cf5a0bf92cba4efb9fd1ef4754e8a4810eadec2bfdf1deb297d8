{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordaomemoria/Documents/projects/nextjs2/pages/[meetupId].js\";\nimport MeetupDetail from '../components/meetups/MeetupDetail';\nexport default function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://www.doglife.com.br/site/assets/images/gato-e-cao.png\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = await client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  // fetch data for a single meetup\n  const {\n    meetupId\n  } = context.params;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://www.doglife.com.br/site/assets/images/gato-e-cao.png',\n        title: 'First Meetup',\n        id: meetupId,\n        address: 'Some Street 5, Some City',\n        description: 'This is a first meetup'\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/jordaomemoria/Documents/projects/nextjs2/pages/[meetupId].js"],"names":["MeetupDetail","MeetupDetails","props","getStaticPaths","client","MongoClient","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","meetupData","image","title","id","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,oCAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5C,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,8DADP;AAEC,IAAA,KAAK,EAAC,cAFP;AAGC,IAAA,OAAO,EAAC,0BAHT;AAIC,IAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;AAED,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACpB,+FADoB,CAArB;AAGA,QAAMC,EAAE,GAAG,MAAMH,MAAM,CAACG,EAAP,EAAjB;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC7BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADqB,KAAL,CAAlB;AAFD,GAAP;AAMA,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAC9C;AAEA,QAAM;AAAEH,IAAAA;AAAF,MAAeG,OAAO,CAACJ,MAA7B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACNjB,IAAAA,KAAK,EAAE;AACNuB,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,8DADI;AAEXC,QAAAA,KAAK,EAAE,cAFI;AAGXC,QAAAA,EAAE,EAAET,QAHO;AAIXU,QAAAA,OAAO,EAAE,0BAJE;AAKXC,QAAAA,WAAW,EAAE;AALF;AADN;AADD,GAAP;AAWA,CAjBM","sourcesContent":["import MeetupDetail from '../components/meetups/MeetupDetail'\n\nexport default function MeetupDetails(props) {\n\treturn (\n\t\t<MeetupDetail\n\t\t\timage='https://www.doglife.com.br/site/assets/images/gato-e-cao.png'\n\t\t\ttitle='First Meetup'\n\t\t\taddress='Some Street 5, Some City'\n\t\t\tdescription='This is a first meetup'\n\t\t/>\n\t)\n}\n\nexport const getStaticPaths = async () => {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority'\n\t)\n\tconst db = await client.db()\n\tconst meetupsCollection = db.collection('meetups')\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t}\n}\n\nexport const getStaticProps = async context => {\n\t// fetch data for a single meetup\n\n\tconst { meetupId } = context.params\n\tconsole.log(meetupId)\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\timage: 'https://www.doglife.com.br/site/assets/images/gato-e-cao.png',\n\t\t\t\ttitle: 'First Meetup',\n\t\t\t\tid: meetupId,\n\t\t\t\taddress: 'Some Street 5, Some City',\n\t\t\t\tdescription: 'This is a first meetup',\n\t\t\t},\n\t\t},\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}