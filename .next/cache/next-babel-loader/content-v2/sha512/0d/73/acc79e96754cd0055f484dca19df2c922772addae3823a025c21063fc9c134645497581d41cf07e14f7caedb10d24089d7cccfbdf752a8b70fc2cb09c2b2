{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordaomemoria/Documents/projects/nextjs2/pages/[meetupId].js\";\nimport Head from 'next/head';\nimport MeetupDetail from '../components/meetups/MeetupDetail';\nexport var __N_SSG = true;\nexport default function MeetupDetails(props) {\n  var _props$meetupData = props.meetupData,\n      image = _props$meetupData.image,\n      title = _props$meetupData.title,\n      address = _props$meetupData.address,\n      description = _props$meetupData.description;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_c = MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/jordaomemoria/Documents/projects/nextjs2/pages/[meetupId].js"],"names":["Head","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,0BACGA,KAAK,CAACC,UADT;AAAA,MACpCC,KADoC,qBACpCA,KADoC;AAAA,MAC7BC,KAD6B,qBAC7BA,KAD6B;AAAA,MACtBC,OADsB,qBACtBA,OADsB;AAAA,MACbC,WADa,qBACbA,WADa;AAE5C,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEH,KADR;AAEC,MAAA,KAAK,EAAEC,KAFR;AAGC,MAAA,OAAO,EAAEC,OAHV;AAIC,MAAA,WAAW,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AAcA;KAhBuBN,a","sourcesContent":["import Head from 'next/head'\nimport { MongoClient, ObjectId } from 'mongodb'\nimport MeetupDetail from '../components/meetups/MeetupDetail'\n\nexport default function MeetupDetails(props) {\n\tconst { image, title, address, description } = props.meetupData\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{title}</title>\n\t\t\t\t<meta name='description' content={description} />\n\t\t\t</Head>\n\t\t\t<MeetupDetail\n\t\t\t\timage={image}\n\t\t\t\ttitle={title}\n\t\t\t\taddress={address}\n\t\t\t\tdescription={description}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport const getStaticPaths = async () => {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority'\n\t)\n\tconst db = await client.db()\n\tconst meetupsCollection = db.collection('meetups')\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\n\tclient.close()\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t}\n}\n\nexport const getStaticProps = async context => {\n\tconst { meetupId } = context.params\n\t// fetch data for a single meetup\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority'\n\t)\n\tconst db = await client.db()\n\tconst meetupsCollection = db.collection('meetups')\n\tconst selectedMeetup = await meetupsCollection.findOne({\n\t\t_id: ObjectId(meetupId),\n\t})\n\tclient.close()\n\n\tconst { title, address, image, description } = selectedMeetup\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle,\n\t\t\t\taddress,\n\t\t\t\timage,\n\t\t\t\tdescription,\n\t\t\t},\n\t\t},\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}