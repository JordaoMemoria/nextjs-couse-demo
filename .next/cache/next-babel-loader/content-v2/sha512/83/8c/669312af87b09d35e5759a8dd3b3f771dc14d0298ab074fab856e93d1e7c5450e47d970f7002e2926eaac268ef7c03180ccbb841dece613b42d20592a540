{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordaomemoria/Documents/projects/nextjs2/pages/[meetupId].js\";\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../components/meetups/MeetupDetail';\nexport default function MeetupDetails(props) {\n  const {\n    image,\n    title,\n    address,\n    description\n  } = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetups and create amazing networking opporutnities.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = await client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const {\n    meetupId\n  } = context.params; // fetch data for a single meetup\n\n  const client = await MongoClient.connect('mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = await client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  const {\n    title,\n    address,\n    image,\n    description\n  } = selectedMeetup;\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title,\n        address,\n        image,\n        description\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/jordaomemoria/Documents/projects/nextjs2/pages/[meetupId].js"],"names":["Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","image","title","address","description","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAyCJ,KAAK,CAACK,UAArD;AACA,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQH;AAAR;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,IAAI,EAAC,aADN;AAEC,QAAA,OAAO,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAQC,QAAC,YAAD;AACC,MAAA,KAAK,EAAED,KADR;AAEC,MAAA,KAAK,EAAEC,KAFR;AAGC,MAAA,OAAO,EAAEC,OAHV;AAIC,MAAA,WAAW,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,YARD;AAAA,kBADD;AAiBA;AAED,OAAO,MAAME,cAAc,GAAG,YAAY;AACzC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACpB,+FADoB,CAArB;AAGA,QAAMC,EAAE,GAAG,MAAMF,MAAM,CAACE,EAAP,EAAjB;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC7BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADqB,KAAL,CAAlB;AAFD,GAAP;AAMA,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAC9C,QAAM;AAAEH,IAAAA;AAAF,MAAeG,OAAO,CAACJ,MAA7B,CAD8C,CAE9C;;AACA,QAAMd,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACpB,+FADoB,CAArB;AAGA,QAAMC,EAAE,GAAG,MAAMF,MAAM,CAACE,EAAP,EAAjB;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACtDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADyC,GAA1B,CAA7B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AAEA,QAAM;AAAEd,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBF,IAAAA,KAAlB;AAAyBG,IAAAA;AAAzB,MAAyCsB,cAA/C;AACA,SAAO;AACN1B,IAAAA,KAAK,EAAE;AACNK,MAAAA,UAAU,EAAE;AACXuB,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADO;AAEXrB,QAAAA,KAFW;AAGXC,QAAAA,OAHW;AAIXF,QAAAA,KAJW;AAKXG,QAAAA;AALW;AADN;AADD,GAAP;AAWA,CAzBM","sourcesContent":["import Head from 'next/head'\nimport { MongoClient, ObjectId } from 'mongodb'\nimport MeetupDetail from '../components/meetups/MeetupDetail'\n\nexport default function MeetupDetails(props) {\n\tconst { image, title, address, description } = props.meetupData\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{title}</title>\n\t\t\t\t<meta\n\t\t\t\t\tname='description'\n\t\t\t\t\tcontent='Add your own meetups and create amazing networking opporutnities.'\n\t\t\t\t/>\n\t\t\t</Head>\n\t\t\t<MeetupDetail\n\t\t\t\timage={image}\n\t\t\t\ttitle={title}\n\t\t\t\taddress={address}\n\t\t\t\tdescription={description}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport const getStaticPaths = async () => {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority'\n\t)\n\tconst db = await client.db()\n\tconst meetupsCollection = db.collection('meetups')\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\n\tclient.close()\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t}\n}\n\nexport const getStaticProps = async context => {\n\tconst { meetupId } = context.params\n\t// fetch data for a single meetup\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://jordao:ljmpr1616@cluster0.7anjc.mongodb.net/meetups?retryWrites=true&w=majority'\n\t)\n\tconst db = await client.db()\n\tconst meetupsCollection = db.collection('meetups')\n\tconst selectedMeetup = await meetupsCollection.findOne({\n\t\t_id: ObjectId(meetupId),\n\t})\n\tclient.close()\n\n\tconst { title, address, image, description } = selectedMeetup\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle,\n\t\t\t\taddress,\n\t\t\t\timage,\n\t\t\t\tdescription,\n\t\t\t},\n\t\t},\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}